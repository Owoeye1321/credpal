// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  username     String
  password     String?
  isActive     Boolean       @default(false)
  wallets      Wallet[]      @relation("UserWallets")
  transactions Transaction[] @relation("UserTransactions")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Wallet {
  id           Int           @id @default(autoincrement())
  currency     String
  balance      Decimal       @default(0.0)
  userId       Int
  walletRef    String        @unique
  user         User          @relation("UserWallets", fields: [userId], references: [id])
  transactions Transaction[] @relation("WalletTransactions")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([userId, currency]) // ensures only one wallet per currency per user
}

model Transaction {
  id        Int      @id @default(autoincrement())
  walletRef String
  wallet    Wallet   @relation("WalletTransactions", fields: [walletRef], references: [walletRef])
  user      User     @relation("UserTransactions", fields: [userId], references: [id])
  type      String
  currency  String
  userId    Int
  amount    Decimal
  reference String   @unique
  metadata  Json?
  createdAt DateTime @default(now())
}
